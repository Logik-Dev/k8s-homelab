# Class for sharing existing media files
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-medias
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: nfs.csi.k8s.io
parameters:
    server: 192.168.10.100
    share: /mnt/future/medias
    subDir: "/"
mountOptions: 
  - vers=4.2 
  - rsize=1048576
  - wsize=1048576
  - hard
  - intr
  - timeo=600
  - noatime
reclaimPolicy: Retain
volumeBindingMode: Immediate
allowVolumeExpansion: true

# Class for slow workloads
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-workloads
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: nfs.csi.k8s.io
parameters:
    server: 192.168.10.100
    share: /mnt/future/archives
    subDir: "${pvc.metadata.name}"
mountOptions: 
  - vers=4.2 
  - rsize=1048576
  - wsize=1048576
  - hard
  - intr
  - timeo=600
  - noatime
reclaimPolicy: Retain
volumeBindingMode: Immediate
allowVolumeExpansion: true

# Class for fast workloads
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-ultra
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: nfs.csi.k8s.io
parameters:
  server: 192.168.10.100
  share: /mnt/ultra/k8s
  subDir: "${pvc.metadata.name}"
mountOptions: 
  - vers=4.2 
  - rsize=1048576
  - wsize=1048576
  - hard
  - intr
  - timeo=600
  - noatime
reclaimPolicy: Retain
volumeBindingMode: Immediate
allowVolumeExpansion: true
